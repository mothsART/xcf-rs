use xcf_rs::create::rle_compress;

#[test]
fn rle_compression_four_pixels() {
    assert_eq!(
        rle_compress(&vec!(222, 36, 36, 222)),
        vec!(252, 222, 36, 36, 222)
    );
    assert_eq!(
        rle_compress(&vec!(158, 0, 255, 43)),
        vec!(252, 158, 0, 255, 43)
    );
    assert_eq!(
        rle_compress(&vec!(0, 158, 5, 34)),
        vec!(252, 0, 158, 5, 34)
    );
    assert_eq!(
        rle_compress(&vec!(0, 0, 114, 121)),
        vec!(1, 0, 254, 114, 121)
    );
    assert_eq!(
        rle_compress(&vec![183, 209, 209]),
        vec![253, 183, 1, 209]
    );
}

#[test]
fn rle_compression_12_pixels() {
    assert_eq!(
        rle_compress(&vec![0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255]),
        vec![246, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 1, 255]
    );
    assert_eq!(
        rle_compress(&vec![0, 201, 255, 0, 0, 201, 255, 0, 0, 201, 255, 0]),
        vec![244, 0, 201, 255, 0, 0, 201, 255, 0, 0, 201, 255, 0]
    );
    assert_eq!(
        rle_compress(&vec![0, 84, 255, 0, 0, 84, 255, 0, 0, 84, 255, 0]),
        vec![244, 0, 84, 255, 0, 0, 84, 255, 0, 0, 84, 255, 0]
    );
}

#[test]
fn rle_compression_7x1_diff_pixels() {
    assert_eq!(
        rle_compress(&vec![0, 0, 0, 54, 255, 255, 255]),
        vec![2, 0, 255, 54, 2, 255]
    );
    assert_eq!(
        rle_compress(&vec![0, 0, 0, 201, 255, 255, 0]),
        vec![2, 0, 252, 201, 255, 255, 0]
    );
    assert_eq!(
        rle_compress(&vec![0, 0, 0, 84, 255, 255, 0]),
        vec![2, 0, 252, 84, 255, 255, 0]
    );
}

#[test]
fn rle_compression_12x11_pixels() {
    assert_eq!(
        rle_compress(&vec![
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255
        ]),
        vec![
            128, 0, 132,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255, 0, 54, 255, 255,
            0, 54, 255, 255
            //01, 255            
        ]
    );
}

#[test]
fn rle_compression_nine_pixels() {
    assert_eq!(
        rle_compress(&vec!(222, 36, 36, 222, 36, 48, 0, 219, 0)),
        vec!(247, 222, 36, 36, 222, 36, 48, 0, 219, 0)
    );
}

#[test]
fn rle_compression_9x3_pixels() {
    assert_eq!(
        rle_compress(&vec![
                  158, 130, 222, 158, 130, 222, 158, 130, 222, 36, 222, 5, 36, 222, 5, 36, 222, 5, 0, 136, 248, 0, 136, 248, 0, 136, 248]),
        vec![229, 158, 130, 222, 158, 130, 222, 158, 130, 222, 36, 222, 5, 36, 222, 5, 36, 222, 5, 0, 136, 248, 0, 136, 248, 0, 136, 248]
    );
}

#[test]
fn rle_compression_9x9_pixels() {
    assert_eq!(
        rle_compress(&vec![
            158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248
        ]),
        vec![175, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248]
    );
}

#[test]
fn rle_compression_9x15_pixels() {
    assert_eq!(
        rle_compress(&vec![
            158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248
        ]),
        vec![128, 0, 135, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248, 158, 130, 222, 36, 222, 5, 0, 136, 248]
    );
}

#[test]
fn rle_compression_9x15_same_pixels() {
    assert_eq!(
        rle_compress(&vec![

        ]),
        vec![127, 0, 135, 54]
    );
}

#[test]
fn rle_compression_9x1_same_pixels() {
    assert_eq!(
        rle_compress(&vec![
            36, 36, 36, 36, 36, 36, 36, 36, 36
        ]),
        vec![08, 36]
    );
}

#[test]
fn rle_compression_9x9_diff_pixels() {
    let raw = vec![
        254, 254, 254,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
    ];
    assert_eq!(
        rle_compress(&raw),
        vec![2, 254, 77, 255]
    );
}

#[test]
fn rle_compression_30x30_same_pixels() {
    let raw = &vec![
        157, 160, 181, 203, 172, 161, 172, 182, 187, 158,
        165, 157, 158, 167, 156, 164, 156, 159, 184, 189,
        176, 184, 160, 182, 201, 195, 161, 158, 163, 160,
        156, 158, 172, 165, 157, 173, 199, 164, 159, 157,
        163, 163, 187, 183, 157, 158, 158, 176, 160, 163,
        157, 157, 156, 169, 172, 164, 156, 164, 183, 187,
        159, 177, 189, 162, 156, 165, 200, 169, 161, 165,
        164, 179, 194, 159, 176, 174, 168, 191, 163, 157,
        171, 186, 160, 170, 157, 156, 156, 168, 173, 176,
        156, 177, 182, 161, 157, 157, 171, 160, 159, 174,
        191, 158, 162, 158, 186, 171, 157, 157, 176, 166,
        158, 178, 167, 165, 156, 157, 156, 189, 167, 156,
        159, 187, 184, 168, 180, 161, 156, 165, 168, 157,
        169, 158, 156, 160, 192, 175, 160, 156, 160, 175,
        157, 158, 157, 158, 184, 191, 168, 178, 193, 194,
        185, 163, 169, 180, 176, 156, 156, 166, 194, 173,
        192, 168, 156, 159, 193, 196, 182, 164, 158, 178,
        157, 161, 162, 170, 169, 184, 175, 157, 161, 174,
        168, 156, 156, 173, 185, 167, 173, 157, 163, 156,
        171, 172, 165, 157, 163, 177, 184, 181, 156, 158,
        163, 176, 165, 193, 156, 156, 156, 156, 156, 156,
        156, 160, 156, 171, 166, 161, 178, 160, 177, 159,
        157, 179, 181, 157, 156, 157, 157, 158, 157, 157,
        165, 163, 157, 169, 156, 156, 163, 186, 158, 164,
        158, 185, 169, 156, 156, 163, 164, 159, 167, 160,
        162, 196, 191, 159, 159, 192, 179, 174, 159, 166,
        166, 156, 170, 162, 157, 171, 172, 190, 167, 156,
        187, 165, 159, 164, 159, 158, 156, 156, 156, 156,
        157, 174, 172, 156, 158, 182, 169, 177, 161, 159,
        192, 159, 170, 170, 156, 160, 158, 169, 182, 177,
        187, 172, 156, 188, 175, 164, 162, 158, 174, 173,
        185, 166, 158, 166, 158, 157, 164, 183, 191, 170,
        177, 159, 171, 190, 171, 160, 158, 163, 170, 167,
        161, 160, 156, 162, 159, 163, 175, 177, 208, 201,
        181, 164, 178, 183, 159, 168, 200, 189, 167, 192,
        171, 156, 157, 170, 182, 186, 186, 159, 173, 158,
        162, 169, 163, 186, 171, 160, 177, 159, 166, 171,
        158, 156, 158, 158, 156, 173, 195, 181, 157, 170,
        168, 176, 162, 157, 167, 179, 170, 156, 169, 162,
        182, 190, 189, 197, 161, 167, 182, 159, 157, 158,
        158, 156, 156, 162, 169, 156, 159, 163, 157, 157,
        183, 193, 159, 156, 156, 179, 181, 157, 157, 157,
        164, 161, 165, 194, 167, 157, 163, 168, 160, 175,
        181, 164, 164, 187, 169, 156, 156, 157, 157, 157,
        175, 161, 156, 156, 168, 169, 166, 159, 175, 162,
        185, 165, 156, 181, 190, 160, 164, 187, 157, 157,
        158, 158, 167, 206, 167, 158, 156, 156, 161, 173,
        169, 162, 157, 169, 210, 176, 160, 158, 179, 159,
        159, 158, 185, 167, 158, 168, 168, 170, 157, 157,
        165, 167, 157, 163, 158, 157, 157, 174, 159, 161,
        175, 188, 163, 158, 166, 181, 176, 158, 190, 178,
        156, 162, 198, 193, 185, 189, 164, 158, 157, 171,
        188, 195, 182, 157, 163, 175, 159, 195, 184, 161,
        160, 175, 192, 170, 156, 156, 162, 157, 193, 184,
        165, 158, 156, 162, 173, 159, 156, 156, 160, 186,
        159, 161, 158, 166, 180, 178, 156, 167, 177, 160,
        158, 168, 201, 191, 178, 157, 171, 158, 166, 162,
        185, 187, 165, 161, 157, 157, 167, 173, 157, 161,
        156, 156, 164, 199, 165, 186, 172, 156, 156, 184,
        188, 177, 183, 162, 180, 157, 160, 157, 165, 191,
        158, 165, 167, 168, 172, 187, 185, 177, 184, 164,
        156, 157, 167, 166, 156, 192, 190, 165, 156, 181,
        165, 157, 156, 161, 175, 158, 157, 157, 157, 170,
        166, 172, 167, 160, 156, 167, 196, 159, 185, 166,
        156, 157, 169, 167, 160, 174, 171, 199, 180, 183,
        160, 158, 156, 161, 160, 157, 160, 156, 160, 160,
        169, 167, 198, 200, 183, 161, 170, 161, 190, 162,
        157, 177, 172, 157, 160, 157, 175, 180, 174, 184,
        159, 192, 181, 164, 160, 159, 187, 160, 162, 176,
        170, 158, 159, 169, 175, 174, 173, 177, 182, 156,
        160, 199, 177, 171, 184, 162, 185, 165, 157, 157,
        157, 198, 177, 165, 175, 157, 169, 158, 157, 172,
        166, 156, 161, 179, 158, 156, 156, 162, 160, 160,
        157, 157, 160, 177, 166, 156, 164, 168, 165, 176,
        157, 167, 166, 156, 182, 179, 157, 161, 157, 156,
        176, 165, 186, 187, 170, 163, 157, 175, 161, 185,
        186, 156, 156, 161, 177, 161, 160, 184, 159, 157,
        164, 169, 157, 157, 182, 164, 158, 181, 170, 156,
        162, 163, 169, 157, 167, 173, 156, 166, 158, 174,
        185, 159, 158, 156, 159, 163, 164, 165, 195, 172,
        165, 200, 168, 175, 180, 158, 156, 156, 169, 161,
        164, 165, 159, 160, 183, 176, 156, 189, 187, 158,
        166, 188, 187, 158, 164, 168, 186, 159, 165, 174,
        157, 172, 160, 171, 187, 159, 178, 177, 161, 162,
        178, 186, 161, 160, 201, 168, 156, 159, 166, 157,
        158, 194, 185, 158, 184, 157, 157, 157, 158, 191,
        163, 181, 169, 156, 157, 163, 195, 174, 159, 157,
        160, 183, 179, 159, 170, 159, 183, 163, 156, 169,
        159, 160, 179, 162, 167, 156, 162, 181, 157, 173,
        157, 165, 168, 170, 156, 163, 166, 162, 188, 163
    ];
    assert_eq!(
        rle_compress(raw),
        vec![
        128, 3, 132,

        157, 160, 181, 203, 172, 161, 172, 182, 187, 158,
        165, 157, 158, 167, 156, 164, 156, 159, 184, 189,
        176, 184, 160, 182, 201, 195, 161, 158, 163, 160,
        156, 158, 172, 165, 157, 173, 199, 164, 159, 157,
        163, 163, 187, 183, 157, 158, 158, 176, 160, 163,
        157, 157, 156, 169, 172, 164, 156, 164, 183, 187,
        159, 177, 189, 162, 156, 165, 200, 169, 161, 165,
        164, 179, 194, 159, 176, 174, 168, 191, 163, 157,
        171, 186, 160, 170, 157, 156, 156, 168, 173, 176,
        156, 177, 182, 161, 157, 157, 171, 160, 159, 174,
        191, 158, 162, 158, 186, 171, 157, 157, 176, 166,
        158, 178, 167, 165, 156, 157, 156, 189, 167, 156,
        159, 187, 184, 168, 180, 161, 156, 165, 168, 157,
        169, 158, 156, 160, 192, 175, 160, 156, 160, 175,
        157, 158, 157, 158, 184, 191, 168, 178, 193, 194,
        185, 163, 169, 180, 176, 156, 156, 166, 194, 173,
        192, 168, 156, 159, 193, 196, 182, 164, 158, 178,
        157, 161, 162, 170, 169, 184, 175, 157, 161, 174,
        168, 156, 156, 173, 185, 167, 173, 157, 163, 156,
        171, 172, 165, 157, 163, 177, 184, 181, 156, 158,
        163, 176, 165, 193, 156, 156, 156, 156, 156, 156,
        156, 160, 156, 171, 166, 161, 178, 160, 177, 159,
        157, 179, 181, 157, 156, 157, 157, 158, 157, 157,
        165, 163, 157, 169, 156, 156, 163, 186, 158, 164,
        158, 185, 169, 156, 156, 163, 164, 159, 167, 160,
        162, 196, 191, 159, 159, 192, 179, 174, 159, 166,
        166, 156, 170, 162, 157, 171, 172, 190, 167, 156,
        187, 165, 159, 164, 159, 158, 156, 156, 156, 156,
        157, 174, 172, 156, 158, 182, 169, 177, 161, 159,
        192, 159, 170, 170, 156, 160, 158, 169, 182, 177,
        187, 172, 156, 188, 175, 164, 162, 158, 174, 173,
        185, 166, 158, 166, 158, 157, 164, 183, 191, 170,
        177, 159, 171, 190, 171, 160, 158, 163, 170, 167,
        161, 160, 156, 162, 159, 163, 175, 177, 208, 201,
        181, 164, 178, 183, 159, 168, 200, 189, 167, 192,
        171, 156, 157, 170, 182, 186, 186, 159, 173, 158,
        162, 169, 163, 186, 171, 160, 177, 159, 166, 171,
        158, 156, 158, 158, 156, 173, 195, 181, 157, 170,
        168, 176, 162, 157, 167, 179, 170, 156, 169, 162,
        182, 190, 189, 197, 161, 167, 182, 159, 157, 158,
        158, 156, 156, 162, 169, 156, 159, 163, 157, 157,
        183, 193, 159, 156, 156, 179, 181, 157, 157, 157,
        164, 161, 165, 194, 167, 157, 163, 168, 160, 175,
        181, 164, 164, 187, 169, 156, 156, 157, 157, 157,
        175, 161, 156, 156, 168, 169, 166, 159, 175, 162,
        185, 165, 156, 181, 190, 160, 164, 187, 157, 157,
        158, 158, 167, 206, 167, 158, 156, 156, 161, 173,
        169, 162, 157, 169, 210, 176, 160, 158, 179, 159,
        159, 158, 185, 167, 158, 168, 168, 170, 157, 157,
        165, 167, 157, 163, 158, 157, 157, 174, 159, 161,
        175, 188, 163, 158, 166, 181, 176, 158, 190, 178,
        156, 162, 198, 193, 185, 189, 164, 158, 157, 171,
        188, 195, 182, 157, 163, 175, 159, 195, 184, 161,
        160, 175, 192, 170, 156, 156, 162, 157, 193, 184,
        165, 158, 156, 162, 173, 159, 156, 156, 160, 186,
        159, 161, 158, 166, 180, 178, 156, 167, 177, 160,
        158, 168, 201, 191, 178, 157, 171, 158, 166, 162,
        185, 187, 165, 161, 157, 157, 167, 173, 157, 161,
        156, 156, 164, 199, 165, 186, 172, 156, 156, 184,
        188, 177, 183, 162, 180, 157, 160, 157, 165, 191,
        158, 165, 167, 168, 172, 187, 185, 177, 184, 164,
        156, 157, 167, 166, 156, 192, 190, 165, 156, 181,
        165, 157, 156, 161, 175, 158, 157, 157, 157, 170,
        166, 172, 167, 160, 156, 167, 196, 159, 185, 166,
        156, 157, 169, 167, 160, 174, 171, 199, 180, 183,
        160, 158, 156, 161, 160, 157, 160, 156, 160, 160,
        169, 167, 198, 200, 183, 161, 170, 161, 190, 162,
        157, 177, 172, 157, 160, 157, 175, 180, 174, 184,
        159, 192, 181, 164, 160, 159, 187, 160, 162, 176,
        170, 158, 159, 169, 175, 174, 173, 177, 182, 156,
        160, 199, 177, 171, 184, 162, 185, 165, 157, 157,
        157, 198, 177, 165, 175, 157, 169, 158, 157, 172,
        166, 156, 161, 179, 158, 156, 156, 162, 160, 160,
        157, 157, 160, 177, 166, 156, 164, 168, 165, 176,
        157, 167, 166, 156, 182, 179, 157, 161, 157, 156,
        176, 165, 186, 187, 170, 163, 157, 175, 161, 185,
        186, 156, 156, 161, 177, 161, 160, 184, 159, 157,
        164, 169, 157, 157, 182, 164, 158, 181, 170, 156,
        162, 163, 169, 157, 167, 173, 156, 166, 158, 174,
        185, 159, 158, 156, 159, 163, 164, 165, 195, 172,
        165, 200, 168, 175, 180, 158, 156, 156, 169, 161,
        164, 165, 159, 160, 183, 176, 156, 189, 187, 158,
        166, 188, 187, 158, 164, 168, 186, 159, 165, 174,
        157, 172, 160, 171, 187, 159, 178, 177, 161, 162,
        178, 186, 161, 160, 201, 168, 156, 159, 166, 157,
        158, 194, 185, 158, 184, 157, 157, 157, 158, 191,
        163, 181, 169, 156, 157, 163, 195, 174, 159, 157,
        160, 183, 179, 159, 170, 159, 183, 163, 156, 169,
        159, 160, 179, 162, 167, 156, 162, 181, 157, 173,
        157, 165, 168, 170, 156, 163, 166, 162, 188, 163
        ]
    );
}
